{"version":3,"sources":["images/correct.svg","images/wrong.svg","components/Color.jsx","images/arrow.svg","App.jsx","index.js"],"names":["Color","props","red","green","blue","setAnswer","correctColor","disable","setDisable","useState","imgAnswer","setImgAnswer","win","setWin","useEffect","style","backgroundColor","className","toString","id","onClick","target","classList","add","src","correct","alt","width","wrong","App","level","setLevel","setCorrectColor","arrayColors","setArrayColors","answer","randomNumber","min","max","Math","round","random","toFixed","option","quantity","arrayOfColors","i","color","push","correctColorIndex","length","generateColorOptions","document","getElementById","text","arrow","map","parentNode","remove","type","value","htmlFor","index","window","location","reload","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.39d274bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/correct.848a929d.svg\";","export default __webpack_public_path__ + \"static/media/wrong.43f79342.svg\";","import React, { useEffect, useState } from 'react';\nimport correct from '../images/correct.svg';\nimport wrong from \"../images/wrong.svg\";\n\nexport default function Color(props) {\n  const { red, green, blue, setAnswer, correctColor, disable, setDisable } = props;\n  const [imgAnswer, setImgAnswer] = useState('');\n  const [win, setWin] = useState();\n  \n  useEffect(() => {\n    const revealAnswer = () => {\n      if (disable\n          && red === correctColor.red\n          && green === correctColor.green\n          && blue === correctColor.blue\n      ) {\n        setWin('correct');\n      } else {\n        setWin('')\n      }\n    }\n    \n    revealAnswer();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disable]);\n\n  return (\n    <div\n      style={{ backgroundColor: `rgb(${red}, ${green}, ${blue})` }}\n      className={`color-ball ${win}`}\n      disable={disable.toString()}\n      id={imgAnswer}\n      onClick={({ target }) => {\n        if (!disable) {\n          if (\n            red === correctColor.red &&\n            green === correctColor.green &&\n            blue === correctColor.blue\n          ) {\n            setDisable(true);\n            target.classList.add(\"correct\");\n            setImgAnswer(\"correct\");\n            return setAnswer(\"Acertou!\");\n          }\n          setDisable(true);\n          target.classList.add(\"wrong\");\n          setImgAnswer(\"wrong\");\n          return setAnswer(\"Infelizmente você errou!\");\n        }\n      }}\n    >\n      {imgAnswer !== \"\" ? (\n        imgAnswer === \"correct\" ? (\n          <img src={correct} alt=\"correct\" width=\"40\" />\n        ) : (\n          <img src={wrong} alt=\"wrong\" width=\"40\" />\n        )\n      ) : null}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/arrow.c2a7bd6f.svg\";","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Color from './components/Color';\nimport arrow from './images/arrow.svg';\n\nfunction App() {\n  const ZERO = 0;\n  const ONE = 1;\n  const MAX_COLOR_VALUE = 255;\n  const MIN_COLOR_VALUE = ZERO;\n  const DEFAULT_LEVEL = 'easy';\n  const EASY = 4;\n  const MEDIUM = 7;\n  const HARD = 10;\n  \n  const [level, setLevel] = useState(DEFAULT_LEVEL);\n  const [correctColor, setCorrectColor] = useState(null);\n  const [arrayColors, setArrayColors] = useState([]);\n  const [answer, setAnswer] = useState('');\n  const [disable, setDisable] = useState(false);\n  // const [score, setScore] = useState(0);\n\n  const randomNumber = (min, max) => {\n    return Math\n      .round(Math.random() * (max - min) + min)\n      .toFixed(ZERO);\n  }\n\n  const generateColor = () => {\n    const red = randomNumber(MIN_COLOR_VALUE, MAX_COLOR_VALUE);\n    const green = randomNumber(MIN_COLOR_VALUE, MAX_COLOR_VALUE);\n    const blue = randomNumber(MIN_COLOR_VALUE, MAX_COLOR_VALUE);\n    return { red, green, blue };\n  };\n\n  useEffect(() => {\n  const generateColorOptions = (option) => {\n    let arrayOfColors = [];\n    let quantity;\n    switch (option.level) {\n      case 'easy':\n        quantity = EASY;\n        break;\n      case 'medium':\n        quantity = MEDIUM;\n        break;\n      case 'hard':\n        quantity = HARD;\n        break;\n      default:\n        quantity = EASY;\n    }\n    for (let i = ZERO; i < quantity; i++) {\n      const color = generateColor();\n      arrayOfColors.push(color);\n    }\n    setArrayColors(arrayOfColors);\n    const correctColorIndex = randomNumber(ZERO, arrayOfColors.length - ONE);\n    setCorrectColor(arrayOfColors[correctColorIndex]);\n  }\n    \n  generateColorOptions(level);\n  \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [level])\n\n  const levelOptions = [\n    { level: 'easy', text: 'Fácil' },\n    { level: 'medium', text: 'Médio' },\n    { level: 'hard', text: 'Difícil' },\n  ];\n  \n  return (\n    <>\n      <header>\n        <h1>Adivinhe a cor!</h1>\n      </header>\n      <main className=\"content\">\n          <div className=\"level-content\">\n            <p>Nível:</p>\n            <div className=\"select-option\">\n            <div\n              className=\"selected\"\n              onClick={() => {\n                document.getElementById('options-content').classList.add('show');\n                document.getElementById('arrow').classList.add('rotate');\n              }}\n            >\n                <p>{level.text || 'Fácil'}</p>\n                <img id=\"arrow\" src={arrow} alt=\"arrow\" width='20' className=\"arrow\" />\n              </div>\n              <div id=\"options-content\" className=\"options-content\">\n                {levelOptions.map((option) => (\n                  <div\n                    key={option.level}\n                    className=\"option\"\n                    onClick={({target}) => {\n                      setLevel(option); \n                      target.parentNode.classList.remove('show');\n                      document.getElementById('arrow').classList.remove('rotate');\n                    }}\n                    \n                  >\n                    <input\n                      type=\"radio\"\n                      id={option.level}\n                      value={option.level}\n                    />\n                    <label\n                      htmlFor={option.level}\n                      onClick={({ target }) => target.parentNode\n                          .parentNode.classList.remove('show')}\n                    >\n                      {option.text}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        {correctColor && (\n          <p className=\"rgb-color\">\n            {`(${correctColor.red}, ${correctColor.green}, ${correctColor.blue})`}\n          </p>\n        )}\n        <div className=\"balls-content\">\n          <p className=\"answer\">Escolha uma cor</p>\n          <div>\n            {\n              arrayColors && arrayColors\n              .map(({ red, green, blue }, index) => (\n                <Color\n                  disable={disable}\n                  setDisable={setDisable}\n                  correctColor={correctColor}\n                  setAnswer={setAnswer}\n                  key={index}\n                  red={red}\n                  green={green}\n                  blue={blue}\n                />\n              ))\n            }\n          </div>\n        </div>\n        <p className=\"answer\">{answer}</p>\n        {\n          answer\n            ? <button\n              type=\"button\"\n              className=\"reset\"\n              onClick={() => window.location.reload()}\n            >\n              Reiniciar\n            </button>\n          : null\n        }\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}